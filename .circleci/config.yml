version: 2.1

references:

base_image: &base_image
  hashicorp/terraform:light

working_directory: &working_directory
  ~/example

default_config: &default_config
  docker:
    - image: *base_image
  working_directory: *working_directory
  environment:
    BASH_ENV: /root/.bashrc

repo_cache_key: &repo_cache_key
  v1-repo-{{ .Branch }}-{{ .Revision }}

# Step to restore repository from cache
restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
      - *working_directory

set_terraform_environment: &set_terraform_environment
  run:
    name: set terraform environment
    command: |
      cd && touch $BASH_ENV
      if [ "${CIRCLE_BRANCH}" == "master" ]; then
        echo 'export TERRAFORM_ENVIRONMENT=production' >> $BASH_ENV
      else
        echo 'export TERRAFORM_ENVIRONMENT=staging' >> $BASH_ENV
      fi

terraform_init: &terraform_init
  run:
    name: terraform init
    command: |
      source $BASH_ENV
      cd terraform/environments/$TERRAFORM_ENVIRONMENT
      terraform init

apply_job: &apply_job
  <<: *default_config
  steps:
    - *restore_repo
    - *set_terraform_environment
    - *terraform_init
    - attach_workspace:
        at: *working_directory
    - run:
        name: terraform apply
        command: |
          source $BASH_ENV
          cd terraform/environments/$TERRAFORM_ENVIRONMENT
          terraform apply --auto-approve ../../../terraform.plan

    - store_artifacts:
        path: terraform/environments/production/terraform.tfstate
        destination: terraform.tfstate

    - persist_to_workspace:
        # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
    # taken to be the root directory of the workspace.
        root: terraform/environments/production/
        # Must be relative path from root
        paths:
            - terraform.tfstate




jobs:
  import_tf:
      docker:
          - image: circleci/node:lts

      steps:
        - run:
            name: Install aws cli
            command: sudo apt-get -y -qq install awscli

        - run:
            name: Create dir
            command: mkdir -p ~/terraform/environments/production

        - run:
            name: Deploy from S3
            command: aws s3 sync s3://ip-terraform-cache ~/terraform/environments/production

        - run:
            name: List
            command: ls ~/terraform/environments/production

        - persist_to_workspace:
            # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
        # taken to be the root directory of the workspace.
            root: ~/terraform/environments/
            # Must be relative path from root
            paths:
                - production


  build:
    <<: *default_config
    steps:
      - checkout
      - *set_terraform_environment
      - run:
          command: |
            source $BASH_ENV

            if [ $(terraform fmt | grep -v .terraform | tee fmt_result.txt | wc -l) -gt 0 ]; then
              echo "Format of this terraform files is not appropiate:"
              echo
              cat fmt_result.txt
              rm fmt_result.txt
              git checkout -- .
              echo
              echo "Please run terraform fmt"
              exit 1
            else
              echo "All good"
            fi
      - *save_repo

  plan:
    <<: *default_config
    steps:
      - *restore_repo
      - *set_terraform_environment
      - *terraform_init

      - run:
          name: List
          command: ls -R ~/terraform

      - run:
          name: terraform plan
          command: |
            source $BASH_ENV
            cd terraform/environments/$TERRAFORM_ENVIRONMENT
            terraform plan -out=../../../terraform.plan
      - persist_to_workspace:
          root: *working_directory
          paths:
            - terraform.plan
      - store_artifacts:
          path: terraform.plan
          destination: terraform.plan

  export_tf:
      docker:
          - image: circleci/node:lts

      steps:
        - attach_workspace:
            at: ~/terraform


        - run:
            name: Install aws cli
            command: sudo apt-get -y -qq install awscli

        - run:
            name: Deploy to S3
            command: aws s3 sync ~/terraform/terraform.tfstate  s3://ip-terraform-cache --delete


  apply:
    <<: *apply_job
  apply-with-approval:
    <<: *apply_job

workflows:
  version: 2
  build_plan_approve_apply:
    jobs:
      - import_tf:
          context: AWS
          filters:
            branches:
              only: master
      - build:
          context: AWS
          requires:
            - import_tf
      - plan:
          context: AWS
          requires:
            - build
      # - approve:
      #     context: AWS
      #     type: approval
      #     requires:
      #       - plan
      #     filters:
      #       branches:
      #         only: master
      - apply-with-approval:
          context: AWS
          requires:
            - plan
          filters:
            branches:
              only: master
      - apply:
          context: AWS
          requires:
            - plan
          filters:
            branches:
              only: staging
      - export_tf:
          context: AWS
          requires:
            - apply-with-approval
          filters:
            branches:
              only: master

